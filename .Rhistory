which(' ' %in% words_tbl)
final_tbl[323]
colnames(final_tbl)[323]
' ' %in% colnames(final_tbl)[323]
gsub(' ','',final_tbl)[323])
gsub(' ','', final_tbl)[323])
?gsub
gsub(' ','', final_tbl[323])
gsub(' ','', names(final_tbl)[323])
gsub("\s",'', names(final_tbl)[323])
gsub("\\s",'', names(final_tbl)[323])
colnames(words_tbl)
gsub(' ', '', colnames(words_tbl))
gsub(' ', '', colnames(words_tbl)[230])
gsub(' ', '', colnames(words_tbl)[79])
gsub("\\s", '', colnames(words_tbl)[79])
piece[['2']]
"夯" %in% piece[['2']]
"夯" %in% piece[['3']]
"夯" %in% piece[['4']]
grep('夯', piece[['4']])
piece[['4']]grep('夯', piece[['4']])
piece[['4']][grep('夯', piece[['4']])]
piece[['3']][grep('夯', piece[['3']])]
piece[['2']][grep('夯', piece[['2']])]
plot(disorder_val)
disorder_val <- sapply(words, disorder, USE.NAMES = FALSE)
plot(disorder_val)
names(disorder_val) <- words
plot(disorder_val, xlab='index', ylab = 'value')
slidify('index2.Rmd')
disorder_val <- sapply(words, disorder, USE.NAMES = FALSE)
names(disorder_val) <- words
```
names(disorder_val) <- words
plot(disorder_val, xlab='index', ylab = 'value')
slidify('index2.Rmd')
disorder_val
disorder_val <- sapply(words, disorder, USE.NAMES = FALSE)
names(disorder_val) <- words
plot(disorder_val, xlab='index', ylab = 'value')
slidify::slidify("index2.Rmd")
slidify::slidify("index2.Rmd")
test_words <- names(which(disorder_val > 1))
tail(test_words, 20)
slidify::slidify("index2.Rmd")
slidify::slidify("index2.Rmd")
?which
words[1:10]
words
words_2_5
words_2_5[sample(1000,10)]
words_2_5[sample(1000,10)]
words_2_5[sample(1000,10)]
sample(100, 10)
1:20
which(1:20 > 5)
pracice <- c('信義區', '北市', '房價', '房市', '上漲')
grep('房', practice)
practice <- c('信義區', '北市', '房價', '房市', '上漲')
grep('房', practice)
practice <- sample(20,10)
pracice > 5
which(pracice > 5)
practice <- sample(20,10)
pracice > 10
which(pracice > 5)
pracice
practice
practice <- sample(20,10)
practice > 10
which(practice > 5)
slidify('index2.Rmd')
words_2_5 <- unique(unlist(piece[2:5]))
words_2_5[sample(length(words_2_5),15)]
plot(words_freq[word_2_5], xlab = 'index', ylab = 'count')
plot(words_freq[words_2_5], xlab = 'index', ylab = 'count')
words_freq
words_freq <- table(unlist(piece))
words_freq[c('信義區', '北市', '房價', '房市', '上漲')]
N <- sum(words_freq[piece[['1']]])
words_prob <- words_freq / N
tail(words_prob, 5)
words_2_5 <- unique(unlist(piece[2:5]))
words_2_5[sample(length(words_2_5),15)]
plot(words_freq[words_2_5], xlab = 'index', ylab = 'count')
practice <- sample(20,10)
practice > 10
which(practice > 5)
practice <- sample(20,10)
practice > 12
which(practice > 12)
words <- names(which(words_freq[words_2_5] > 2))
length(words)
words <- names(which(words_freq[words_2_5] > 5))
length(words)
plot(cohesion_val > 10)
```
cohesion <- function(word){
seg <- segmentWord(word)
val <- sapply(seg, function(x){
f_word <- words_freq[word]
f_x1 <- words_freq[x[1]]
f_x2 <- words_freq[x[2]]
mi <- log2(N) + log2(f_word) - log2(f_x1) - log2(f_x2)
return(mi)
})
return (min(val))
}
cohesion_val <- sapply(words, cohesion, USE.NAMES = FALSE)
words
cohesion_val <- sapply(words, cohesion, USE.NAMES = FALSE)
words_freq
words <- names(which(words_freq[words_2_5] > 2))
words <- names(which(words_freq[words_2_5] > 2))
words
cohesion <- function(word){
seg <- segmentWord(word)
val <- sapply(seg, function(x){
f_word <- words_freq[word]
f_x1 <- words_freq[x[1]]
f_x2 <- words_freq[x[2]]
mi <- log2(N) + log2(f_word) - log2(f_x1) - log2(f_x2)
return(mi)
})
return (min(val))
}
cohesion_val <- sapply(words, cohesion, USE.NAMES = FALSE)
words_freq['富']
segmentWord('富邦')
segmentWord <- function(word){
n <- nchar(word)-1
seg <- lapply(1: n, function(i){
w1 <- substr(word, 1, i)
w2 <- substr(word,i+1, n+1)
c(w1,w2)
})
return(seg)
}
segmentWord('富邦銀')
segmentWord('富邦')
titles <- gsub("\\s", "", titles)
piece <- list()
piece[['1']] <- unlist(sapply(titles, ngram, 1, USE.NAMES = FALSE))
piece[['2']] <- unlist(sapply(titles, ngram, 2, USE.NAMES = FALSE))
piece[['3']] <- unlist(sapply(titles, ngram, 3, USE.NAMES = FALSE))
piece[['4']] <- unlist(sapply(titles, ngram, 4, USE.NAMES = FALSE))
piece[['5']] <- unlist(sapply(titles, ngram, 5, USE.NAMES = FALSE))
piece[['6']] <- unlist(sapply(titles, ngram, 6, USE.NAMES = FALSE))
words_freq <- table(unlist(piece))
words_freq[c('信義區', '北市', '房價', '房市', '上漲')]
words_freq
titles <- gsub("\\s", "", titles)
piece <- list()
piece[['1']] <- unlist(sapply(titles, ngram, 1, USE.NAMES = FALSE))
piece[['2']] <- unlist(sapply(titles, ngram, 2, USE.NAMES = FALSE))
piece[['3']] <- unlist(sapply(titles, ngram, 3, USE.NAMES = FALSE))
piece[['4']] <- unlist(sapply(titles, ngram, 4, USE.NAMES = FALSE))
piece[['5']] <- unlist(sapply(titles, ngram, 5, USE.NAMES = FALSE))
piece[['6']] <- unlist(sapply(titles, ngram, 6, USE.NAMES = FALSE))
segmentWord('富邦銀')
titles <- gsub("\\s", "", titles)
piece <- list()
piece[['1']] <- unlist(sapply(titles, ngram, 1, USE.NAMES = FALSE))
library(slidify)
setwd('~/R_ETL/')
slidify('index2.Rmd')
plot(cohesion_val > 10)
cohesion_val
cohesion_val <- sapply(words, cohesion, USE.NAMES = FALSE)
names(cohesion_val) <- words
coh_words <- names(which(cohesion_val > 10))
plot(cohesion_val > 10)
cohesion_val
words
words <- names(which(words_freq[words_2_5] > 2))
words
cohesion_val <- sapply(words, cohesion, USE.NAMES = FALSE)
names(cohesion_val) <- words
coh_words <- names(which(cohesion_val > 10))
plot(cohesion_val > 10)
plot(cohesion_val)
disorder_val <- sapply(coh_words, disorder, USE.NAMES = FALSE)
names(disorder_val) <- words
names(disorder_val) <- coh_words
tail(names(sort(disorder_val)), 15)
plot(disorder_val, xlab='index', ylab = 'value')
tail(names(sort(disorder_val)), 15)
head(names(sort(disorder_val)), 15)
dis_words <- names(which(disorder_val > 1))
dis_words <- names(which(disorder_val > 1))
tail(dis_words, 20)
tmp <- lapply(dis_words, function(word) str_count(titles, word))
words_tbl <- do.call(cbind, tmp)
colnames(words_tbl) <- dis_words
rownames(words_tbl) <- dates
edit(words_tbl)
words_tbl <- do.call(cbind, tmp)
colnames(words_tbl) <- dis_words
fix(words_tbl)
rownames(words_tbl) <- dates
fix(words_tbl)
words_tbl[1:6, sample(ncol(words_tbl), 8)]
words_tbl <- do.call(cbind, tmp)
colnames(words_tbl) <- dis_words
words_tbl_xts <- xts(words_tbl, as.POSIXct(dates))
fix(words_tbl_xts)
words_tbl_xts
words_tbl_xts["2014-01-18/2014-01-20", 100:110]
ep.weeks <- endpoints(words_tbl_xts, "weeks", k=1)
count.weeks <- period.apply(words_tbl_xts, ep.weeks, FUN=colSums)
count.weeks["2014-01/2014-02", 100:110]
xts::indexTZ(words_tbl_xts)
rownames(words_tbl_xts)
?xts::lastof
?xts::align.time
x <- Sys.time() + 1:1000
# every 10 seconds
align.time(x, 10)
x
x <- Sys.time() + 1:10
# every 10 seconds
align.time(x, 10)
x <- Sys.time() + 1:10
x
align.time(x, 10)
?xts::adj.time
?xts::apply.weekly
xts.ts <- xts(rnorm(231),as.Date(13514:13744,origin="1970-01-01"))
xts.ts
start(xts.ts)
end(xts.ts)
apply.monthly(xts.ts,mean)
?xts::.indexmday
ep.weeks <- endpoints(words_tbl_xts, "weeks", k=1)
count.weeks <- period.apply(words_tbl_xts, ep.weeks, FUN=colSums)
count.weeks["2014-01/2014-02", 100:110]
mystocks <- readRDS('jiawei/mystocks.rds')
mystocks.return <- diff(mystocks, 1) / mystocks
words_tbl[1:6,100:105]
head(return.status)
cl <- kmeans(mystocks.return_all, 5)
return.status <- data.frame(cl$cluster)
return.status
return.status == 5
mystocks.return_all[return.status == 5]
mean(mystocks.return_all[return.status == 5])
status <- sapply(1:5, function(i){
mean(mystocks.return_all[return.status == i])
})
status
c('1'=1)
c('1'=1, '2=6')
c('1'=1, '2'=6)
c('a'=1, 'b'=6)
sort(c('a'=1, 'b'=6))
sort(c('a'=1, 'b'=6, 'c'=3))
x = c()
x = append(x, 'a'=1)
x['a'] = 1
x['b'] = 6
x['c'] = 3
sort(x)
status = c()
for(i in 1:5){
status[i] <- mean(mystocks.return_all[return.status == i])
}
status <- sort(status)
status
status = c()
for(i in 1:5){
i = as.character(i)
status[i] <- mean(mystocks.return_all[return.status == i])
}
status <- sort(status)
status
head(return.status)
words_tbl[1:6,100:105]
head(return.status)
head(dcast(return.status, return_date  ~ cl.cluster, fill = 0))
for(i in names(status)){
print(i)
}
return.status
gsub('5', 'abc', return.status)
gsub('5', 'abc', return.status[,1])
gsub('5', 'abc', return.status[1])
cl$cluster
gsub('5', 'abc', cl$cluster)
cl$cluster
status = c()
for(i in 1:5){
i = as.character(i)
status[i] <- mean(mystocks.return_all[cl$cluster == i])
}
status <- sort(status)
status
?list
status = list()
status[[1]] = c('跌多','跌少','不變','漲少','漲多')
for(i in 1:5){
i = as.character(i)
status[[2]][i] <- mean(mystocks.return_all[cl$cluster == i])
}
status = list()
status[[1]] = c('跌多','跌少','不變','漲少','漲多')
status[[2]] = c()
for(i in 1:5){
i = as.character(i)
status[[2]][i] <- mean(mystocks.return_all[cl$cluster == i])
}
status[[2]]
status = list()
status[[1]] = c('跌多','跌少','不變','漲少','漲多')
status[[2]] = c()
status[[2]]
status[2]
status[2][1]
status[2][2]
status[[2]]
status
status[2] = c()
status[2][1] = 1
status[[2]]
status[2][5] = 5
status[2]
status[2]['b'] = 5
status = list()
status[[1]] = c('跌多','跌少','不變','漲少','漲多')
status
status[[2]] = c('')
status
for(i in 1:5){
i = as.character(i)
status[[2]][i] <- mean(mystocks.return_all[cl$cluster == i])
}
status
status = list()
status[[1]] = c('跌多','跌少','不變','漲少','漲多')
status[[2]] = c()
for(i in 1:5){
i = as.character(i)
status[[2]][i] <- mean(mystocks.return_all[cl$cluster == i])
}
for(i in 1:5){
i = as.character(i)
s2[i] <- mean(mystocks.return_all[cl$cluster == i])
}
s1 = c('跌多','跌少','不變','漲少','漲多')
s2 = c()
for(i in 1:5){
i = as.character(i)
s2[i] <- mean(mystocks.return_all[cl$cluster == i])
}
s2
s2 <- sort(s2)
2
s2
s3 <- cl$cluster
for(i in 1:5){
s3 <- gsub(names(s2)[i], s1[i], s3)
}
s3
s2
cl$cluster
s1 = c('跌多','跌少','不變','漲少','漲多')
s2 = c()
for(i in 1:5){
i = as.character(i)
s2[i] <- mean(mystocks.return_all[cl$cluster == i])
}
s2 <- sort(s2)
for(i in 1:5){
cl$cluster <- gsub(names(s2)[i], s1[i], s3)
}
return.status <- data.frame(cl$cluster)
return.status
head(return.status)
words_tbl[1:6,100:105]
head(return.status)
head(return.status)
head(dcast(return.status, return_date  ~ cl.cluster, fill = 0))
return.status
return.status <- data.frame(cl$cluster)
return.status
return.status <- data.frame(return_date, cl$cluster)
head(return.status)
words_tbl[1:6,100:105]
head(dcast(return.status, return_date  ~ cl.cluster, fill = 0))
return.status <- data.frame(cl$cluster)
head(return.status)
return.status <- data.frame(cl$cluster, rep(nrow, 1))
return.status <- data.frame(cl$cluster, rep(nrow(cl$cluster), 1))
return.status <- data.frame(cl$cluster, rep(length(cl$cluster), 1))
head(return.status)
return.status <- data.frame(cl$cluster, rep(1, length(cl$cluster)))
return.status
head(return.status)
return.status <- data.frame(cluster=cl$cluster, count=rep(1, length(cl$cluster)))
return.status
head(dcast(return.status, return_date  ~ cluster, fill = 0))
return.status <- data.frame(cluster=cl$cluster, count=rep(1, length(cl$cluster)))
head(return.status)
mystocks.return_all
names(mystocks.return_all)
return.status
return_date <- names(mystocks.return_all)
return.status <- cbind(return_date, "status"=return.status)
return.status
head(return.status)
dcast(return.status, return_date  ~ cl.cluster, fill = 0)
return.status <- cbind(date=return_date, "status"=return.status)
head(return.status)
return_date <- names(mystocks.return_all)
return_date <- names(mystocks.return_all)
return.status <- cbind('date'=return_date, 'status'=return.status)
head(return.status)
return.status <- data.frame(cluster=cl$cluster, count=rep(1, length(cl$cluster)))
head(return.status)
return_date <- names(mystocks.return_all)
return.status
head(dcast(return.status, return_date  ~ cluster, fill = 0))
dcast(return.status, return_date  ~ cl.cluster, fill = 0)
dcast(return.status, return_date  ~ cl.cluster, fill = 0)
return.status
dcast(return.status, return_date  ~ cluster, fill = 0)
dcast(return.status, return_date  ~ cluster, fill = 0)
dcast(return.status, return_date  ~ cluster, fill = 0)
return_date <- names(mystocks.return_all)
return.status <- dcast(return.status, return_date  ~ cluster, fill = 0)
return.status
head(return.status)
class(return.status)
return.status <- data.frame(return.status,stringsAsFactors=FALSE)
return.status.xts <- xts(return.status[,-1], as.POSIXct(return_date))
head(return.status.xts)
return_date <- names(mystocks.return_all)
return.status <- dcast(return.status, return_date  ~ cluster, fill = 0)
cl <- kmeans(mystocks.return_all, 5)
s1 = c('跌多','跌少','不變','漲少','漲多')
s2 = c()
for(i in 1:5){
i = as.character(i)
s2[i] <- mean(mystocks.return_all[cl$cluster == i])
}
s2 <- sort(s2)
for(i in 1:5){
cl$cluster <- gsub(names(s2)[i], s1[i], s3)
}
return.status <- data.frame(cluster=cl$cluster, count=rep(1, length(cl$cluster)))
return_date <- names(mystocks.return_all)
return.status <- dcast(return.status, return_date  ~ cluster, fill = 0)
head(return.status)
return.status.xts <- xts(return.status[,-1], as.POSIXct(return_date))
return.status.xts
head(return.status.xts)
final_tbl <- merge.xts(words_tbl_xts, return.status.xts, fill=0)
names(final_tbl) <- c(test_words_2, names(return.status[,-1]))
names(final_tbl) <- c(dis_words, names(return.status[,-1]))
tmp <- dim(final_tbl)[2]
final_tbl[1:6, (tmp-8):tmp]
tbl_cov <- cov(final_tbl)
d <- dist(t(final_tbl),  method = "manhattan")
d2 <- as.matrix(d)
score <- sort(d2[,'X1'])
words <- names(score)
score <- sort(d2[,'跌多'])
words <- names(score)
head(data.frame(words), 10)
score <- sort(d2[,'漲多'])
words <- names(score)
head(data.frame(words), 10)
kw <- list()
for(col in c('跌多','跌少','不變','漲少','漲多')){
kw <- cbind(kw, names(head(sort(d2[,col]), 10)))
}
kw
slidify("index2.Rmd")
index <- str_extract(titles, "重劃|所得")
titles[!is.na(index)]
index <- str_extract(titles, "總銷|招標")
titles[!is.na(index)]
fit <- cmdscale(d2, eig = TRUE, k=2)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2", type = "n")
text(x, y, labels = row.names(t(final_tbl)), cex=.7)
slidify('index2.Rmd')
slidify('index2.Rmd')
slidify("index2.Rmd")
slidify("index2.Rmd")
cl
head(cl$cluster)
cl$cluster
cl$cluster
cl <- kmeans(mystocks.return_all, 5)
cl$cluster
cl$cluster[1:5]
slidify("index2.Rmd")
s2
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
slidify("index2.Rmd")
